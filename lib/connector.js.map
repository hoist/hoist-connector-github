{"version":3,"sources":["connector.js"],"names":[],"mappings":";;;;;;;;;;;;;;mCAGK,wBAAwB;;sBAIxB,QAAQ;;AAEb,IAAI,SAAS,GAAG;AACd,UAAQ,EAAE,0BAA0B;CACrC,CAAC;;;;;;;IAMmB,eAAe;YAAf,eAAe;;;;;;;;;AAQvB,WARQ,eAAe,CAQtB,aAAa,EAAE;0BARR,eAAe;;AAShC,+BATiB,eAAe,6CAS1B,mBAAM,EAAE,EAAE,aAAa,EAAE,SAAS,CAAC,EAAE;AAC3C,QAAI,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC;GACzC;;;;;;;;;;;;eAXkB,eAAe;;WAkBlB,0BAAC,aAAa,EAAE;AAC9B,aAAO,2BAnBU,eAAe,kDAmBF,aAAa,EACxC,IAAI,CAAC,UAAC,MAAM,EAAK;AAChB,eAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CACxD,IAAI,CAAC,UAAC,CAAC,EAAK;AACX,iBAAO,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAM;AAC9C,kBAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACjB,mBAAO,MAAM,CAAC;WACf,CAAC,CAAC;SACJ,CAAC,CAAC;OACN,CAAC,CAAC;KACN;;;SA7BkB,eAAe;;;qBAAf,eAAe","file":"connector.js","sourcesContent":["import {\n  OAuth2ConnectorBase\n}\nfrom '@hoist/oauth-connector';\nimport {\n  merge\n}\nfrom 'lodash';\n\nlet overrides = {\n  baseSite: 'https://github.com/login'\n};\n\n/**\n * A Hoist Connector for connecting to GitHub\n * @extends {OAuth2ConnectorBase}\n */\nexport default class GitHubConnector extends OAuth2ConnectorBase {\n\n  /**\n   * create a new connector\n   * @param {object} configuration - the configuration properties to use\n   * @param {string} configuration.clientId - the OAuth2 client id\n   * @param {string} configuration.clientSecret - the OAuth2 client secret\n   */\n  constructor(configuration) {\n    super(merge({}, configuration, overrides));\n    this._clientId = configuration.clientId;\n  }\n\n  /**\n   * @private\n   * @param AuthorizationStore authorization the users authorisation store\n   * @returns Promise<object> an object containing key value pairs to send with the client to the authorization url\n   */\n  _authorizeParams(authorization) {\n    return super._authorizeParams(authorization)\n      .then((params) => {\n        return Promise.resolve(Math.round(Math.random() * 5000000))\n          .then((r) => {\n            return authorization.set('state', r).then(() => {\n              params.state = r;\n              return params;\n            });\n          });\n      });\n  }\n}\n\n/**\n * @external {OAuth2ConnectorBase} https://github.com/hoist/oauth-connector/blob/master/src/oauth2_connector.js\n */\n"],"sourceRoot":"/source/"}