{"version":3,"sources":["views/edit.js"],"names":[],"mappings":"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","file":"views/edit.js","sourcesContent":["/* globals UI */\n\nvar C = UI.Views.Connector;\n\nclass EditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getRepos = this.getRepos.bind(this);\n    this.renderRepos = this.renderRepos.bind(this);\n    this.getEditView = this.getEditView.bind(this);\n    this.getConnectView = this.getConnectView.bind(this);\n    this.state = {\n      events: [],\n      repositories: []\n    };\n    if (!props.connector) {\n      this.state.mode = 'connect';\n    }\n  }\n  connect() {\n    this.props.onConnect();\n  }\n  componentDidMount() {\n    if (this.props.connectorInstance) {\n      this.getRepos();\n    }\n  }\n  onSubscribe(item) {\n    this.props.onSubscribe({\n      event: item.option,\n      subscribed: item.checked\n    })\n  }\n  renderRepos() {\n    var repos = (this.props.viewData.repositories || []).map((r, i) => {\n      return <option key={i} value={r.full_name}>{r.full_name}</option>;\n    });\n    console.log(this.props.settings.SubscriptionRepository, 'really??');\n    if(!this.props.settings.SubscriptionRepository) {\n      repos.unshift(<option key={\"empty\"}>Select a Repository</option>);\n    }\n    return (<select defaultValue={this.props.settings.SubscriptionRepository} name={\"SubscriptionRepository\"}>{repos}</select>);\n  }\n  getRepos() {\n    this.props.connector.proxy('getRepositories', [100], 'repositories');\n  }\n  getConnectView() {\n    return (\n      <C.Page default=\"setup\" {...this.props}>\n        <C.Panel name=\"Setup\" slug=\"setup\">\n          <UI.FormElements.Button text={'Connect'} type=\"large\" onClick={()=>{\n              return this.connect();\n            }} />\n        </C.Panel>\n        <C.Panel name=\"Events\" slug=\"events\">\n          <C.PageHeader\n            title=\"Events are available once you've connected.\" />\n        </C.Panel>\n      </C.Page>\n    );\n  }\n  getEditView() {\n    return (\n      <C.Page default=\"setup\" {...this.props}>\n        <C.Panel name=\"Setup\" slug=\"setup\">\n          <form onChange={(evt) => {\n            this.props.updateField(evt);\n          }} onSubmit={(evt) => {\n            this.props.updateSettings(evt);\n          }}>\n            <div style={{marginBottom:30,paddingBottom:30,borderBottom:'1px solid #F1F1F1',position:'relative'}}>\n              <C.PageHeader\n                title=\"Choose the repositories you want to subscribe to.\"\n                subTitle=\"We'll create the webhook in the background for you.\" />\n                {this.props.viewData.repositories ? this.renderRepos() : <select><option>Loading...</option></select>}\n            </div>\n            <UI.FormElements.Button text={'Save'} type=\"large\" onClick={this.props.updateSettings} />\n          </form>\n          <UI.TextElements.Link text=\"or Reauthorize\" onClick={this.connect} />\n        </C.Panel>\n        <C.Panel name=\"Events\" slug=\"events\">\n          <C.PageHeader\n            title=\"Check the boxes of the events you want to subscribe to.\"\n            subTitle=\"Checking a box will automatically subscribe you to that event.\" />\n          <C.CheckboxGrid\n            items={['github:repo:update', 'github:new:commit']}\n            checked={['github:new:commit']}\n            onChange={this.onSubscribe} />\n        </C.Panel>\n      </C.Page>\n    );\n  }\n  render() {\n    return (<div>{this.props.connectorInstance ? this.getEditView() : this.getConnectView()}</div>);\n  }\n}\n\nexport default EditForm;\nglobal.EditForm = EditForm;\n"],"sourceRoot":"/source/"}